services:
  # Servicio web principal - FastAPI
  - type: web
    name: gymapi
    runtime: docker # Especifica que usemos el Dockerfile
    envVars:
      # IMPORTANTE: Configuración explícita para usar Transaction Pooler de Supabase
      - key: DATABASE_URL
        value: postgresql://postgres.ueijlkythlkqadxymzqd:Mezjo9-gezrox-guggop@aws-0-us-west-1.pooler.supabase.com:6543/postgres
        # Comentamos la configuración anterior para que no se use la conexión directa
        # fromDatabase:
        #   name: gymapi-db
        #   property: connectionString
      - key: REDIS_URL
        fromService:
          name: gymapi-redis
          type: redis
          property: connectionString
      # Variables de entorno específicas de la aplicación
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG_MODE
        value: "True"
      - key: LOGGING_LEVEL
        value: "DEBUG"
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: SQLALCHEMY_ECHO
        value: "True"
      # --- Añade aquí TODAS las demás variables de entorno necesarias --- #
      # - key: AUTH0_DOMAIN
      #   value: "tu-dominio.auth0.com"
      # - key: AUTH0_CLIENT_SECRET
      #   sync: false # Para evitar mostrar secretos en la UI
      # ... etc

  # Servicio Redis
  - type: redis
    name: gymapi-redis
    ipAllowList: # IP permitidas para conectarse a Redis
      - source: 0.0.0.0/0
        description: everywhere
    plan: starter # Elige el plan según tus necesidades

# Base de datos PostgreSQL
# Mantenemos la definición aunque no la usamos directamente
databases:
  - name: gymapi-db
    databaseName: gymapi
    user: gymapi_user
    plan: starter # Elige el plan según tus necesidades 