# Auth0 Scopes Configuration for GymAPI

Este documento enumera todos los scopes utilizados por la API, organizados por router/endpoint.
Los scopes marcados con [IMPLEMENTADO] son los que ya están en uso en la API y deben configurarse en Auth0.

## Estructura de Permisos por Rol

### Members (Miembros)
- [IMPLEMENTADO] read:profile
- [IMPLEMENTADO] read:members
- [IMPLEMENTADO] read:own_events
- [IMPLEMENTADO] read_events (NOTA: en algunos endpoints aparece como read:events, debe unificarse)
- [IMPLEMENTADO] read:own_participations
- [IMPLEMENTADO] delete:own_participations
- [IMPLEMENTADO] create:participations
- [IMPLEMENTADO] read:own_relationships
- [IMPLEMENTADO] use:chat
- [IMPLEMENTADO] create:chat_rooms
- [IMPLEMENTADO] read:schedules
- [IMPLEMENTADO] read:own_schedules
- [IMPLEMENTADO] register:classes
- [IMPLEMENTADO] read:gyms

### Trainers (Entrenadores)
- [IMPLEMENTADO] read:profile
- [IMPLEMENTADO] read:members
- [IMPLEMENTADO] read:own_events
- [IMPLEMENTADO] read_events (NOTA: en algunos endpoints aparece como read:events, debe unificarse)
- [IMPLEMENTADO] create:events
- [IMPLEMENTADO] update:events
- [IMPLEMENTADO] read:own_participations
- [IMPLEMENTADO] read:participations
- [IMPLEMENTADO] update:participations
- [IMPLEMENTADO] delete:own_participations
- [IMPLEMENTADO] create:participations
- [IMPLEMENTADO] read:own_relationships
- [IMPLEMENTADO] read:relationships
- [IMPLEMENTADO] create:relationships
- [IMPLEMENTADO] update:relationships
- [IMPLEMENTADO] use:chat
- [IMPLEMENTADO] create:chat_rooms
- [IMPLEMENTADO] manage:chat_rooms
- [IMPLEMENTADO] read:schedules
- [IMPLEMENTADO] read:own_schedules
- [IMPLEMENTADO] create:schedules
- [IMPLEMENTADO] update:schedules
- [IMPLEMENTADO] register:classes
- [IMPLEMENTADO] manage:class_registrations
- [IMPLEMENTADO] read:gyms

### Admin (Administradores)
- [IMPLEMENTADO] read:profile
- [IMPLEMENTADO] read:users
- [IMPLEMENTADO] read:members
- [IMPLEMENTADO] admin:users
- [IMPLEMENTADO] update:users
- [IMPLEMENTADO] delete:users
- [IMPLEMENTADO] read:own_events
- [IMPLEMENTADO] read_events (NOTA: en algunos endpoints aparece como read:events, debe unificarse)
- [IMPLEMENTADO] create:events
- [IMPLEMENTADO] update:events
- [IMPLEMENTADO] delete:events
- [IMPLEMENTADO] admin:events
- [IMPLEMENTADO] read:own_participations
- [IMPLEMENTADO] read:participations
- [IMPLEMENTADO] update:participations
- [IMPLEMENTADO] delete:own_participations
- [IMPLEMENTADO] create:participations
- [IMPLEMENTADO] read:own_relationships
- [IMPLEMENTADO] read:relationships
- [IMPLEMENTADO] create:relationships
- [IMPLEMENTADO] update:relationships
- [IMPLEMENTADO] delete:relationships
- [IMPLEMENTADO] admin:relationships
- [IMPLEMENTADO] use:chat
- [IMPLEMENTADO] create:chat_rooms
- [IMPLEMENTADO] manage:chat_rooms
- [IMPLEMENTADO] read:schedules
- [IMPLEMENTADO] read:own_schedules
- [IMPLEMENTADO] create:schedules
- [IMPLEMENTADO] update:schedules
- [IMPLEMENTADO] delete:schedules
- [IMPLEMENTADO] register:classes
- [IMPLEMENTADO] manage:class_registrations
- [IMPLEMENTADO] admin:gyms
- [IMPLEMENTADO] read:gyms
- [IMPLEMENTADO] read:gym_users

## Permisos adicionales encontrados en la implementación

Los siguientes permisos se están usando en la API pero no estaban en la documentación original:
- [IMPLEMENTADO] admin:gyms
- [IMPLEMENTADO] read:gyms
- [IMPLEMENTADO] read:gym_users

## Detalle de Scopes por Router/Endpoint

### Router: /api/v1/users

| Endpoint                  | Método | Scope           | Descripción                                        |
|---------------------------|--------|-----------------|---------------------------------------------------|
| /                         | GET    | [IMPLEMENTADO] read:users      | Listar todos los usuarios                         |
| /by-role/{role}           | GET    | [IMPLEMENTADO] read:users      | Listar usuarios por rol                           |
| /trainers                 | GET    | [IMPLEMENTADO] read:users      | Listar todos los entrenadores                     |
| /members                  | GET    | [IMPLEMENTADO] read:members    | Listar todos los miembros                         |
| /                         | POST   | [IMPLEMENTADO] admin:users     | Crear usuario (admin)                             |
| /profile                  | GET    | (Autenticado)   | Obtener el perfil propio                          |
| /profile                  | PUT    | (Autenticado)   | Actualizar el perfil propio                       |
| /{user_id}/role           | PUT    | [IMPLEMENTADO] admin:users     | Cambiar el rol de un usuario                      |
| /{user_id}                | GET    | [IMPLEMENTADO] read:users      | Obtener un usuario por ID                         |
| /{user_id}                | PUT    | [IMPLEMENTADO] update:users    | Actualizar un usuario                             |
| /{user_id}                | DELETE | [IMPLEMENTADO] delete:users    | Eliminar un usuario                               |
| /register                 | POST   | (Público)       | Registrar un nuevo usuario (siempre como miembro) |

### Router: /api/v1/trainer-member

| Endpoint                      | Método | Scope                  | Descripción                                 |
|-------------------------------|--------|------------------------|--------------------------------------------|
| /                             | POST   | [IMPLEMENTADO] create:relationships   | Crear relación entrenador-miembro          |
| /                             | GET    | [IMPLEMENTADO] admin:relationships    | Listar todas las relaciones (solo admin)   |
| /trainer/{id}/members         | GET    | [IMPLEMENTADO] read:relationships     | Listar miembros de un entrenador           |
| /member/{id}/trainers         | GET    | [IMPLEMENTADO] read:relationships     | Listar entrenadores de un miembro          |
| /my-trainers                  | GET    | [IMPLEMENTADO] read:own_relationships | Listar entrenadores propios (solo miembros)|
| /my-members                   | GET    | [IMPLEMENTADO] read:own_relationships | Listar miembros propios (solo entrenadores)|
| /{id}                         | GET    | [IMPLEMENTADO] read:relationships     | Obtener una relación por ID                |
| /{id}                         | PUT    | [IMPLEMENTADO] update:relationships   | Actualizar una relación                    |
| /{id}                         | DELETE | [IMPLEMENTADO] delete:relationships   | Eliminar una relación                      |

### Router: /api/v1/auth

| Endpoint              | Método | Scope         | Descripción                                      |
|-----------------------|--------|---------------|--------------------------------------------------|
| /login                | GET    | (Público)     | Obtener URL para iniciar sesión                  |
| /login-redirect       | GET    | (Público)     | Redirigir a Auth0 para iniciar sesión            |
| /callback             | GET    | (Público)     | Callback tras autenticación                      |
| /config               | GET    | (Público)     | Obtener configuración de autenticación           |
| /token                | POST   | (Público)     | Intercambiar código por tokens                   |
| /me                   | GET    | [IMPLEMENTADO] read:profile  | Obtener información del usuario autenticado      |
| /test-email           | GET    | [IMPLEMENTADO] read:profile  | Verificar presencia de email en token            |
| /logout               | GET    | (Público)     | Cerrar sesión                                    |
| /create-admin         | POST   | [IMPLEMENTADO] admin:users   | Convertir usuario en administrador               |
| /get-user-email       | GET    | [IMPLEMENTADO] read:profile  | Obtener email del usuario                        |
| /check-permissions    | GET    | [IMPLEMENTADO] read:profile  | Verificar permisos del usuario                  |

### Router: /api/v1/events

| Endpoint                       | Método | Scope                    | Descripción                                 |
|--------------------------------|--------|--------------------------|---------------------------------------------|
| /                              | POST   | [IMPLEMENTADO] create:events            | Crear un nuevo evento                       |
| /                              | GET    | [IMPLEMENTADO] read_events              | Listar eventos con filtros              |
| /me                            | GET    | [IMPLEMENTADO] read:own_events          | Listar eventos creados por el usuario       |
| /{id}                          | GET    | [IMPLEMENTADO] read_events              | Obtener detalles de un evento         |
| /{id}                          | PUT    | create:events (NO IMPLEMENTADO) | Actualizar un evento                        |
| /{id}                          | DELETE | [IMPLEMENTADO] delete:events            | Eliminar un evento                          |
| /admin/{id}                    | DELETE | [IMPLEMENTADO] admin:events             | Eliminar cualquier evento (solo admin)      |
| /participation                 | POST   | [IMPLEMENTADO] create:participations    | Registrarse en un evento                    |
| /participation/me              | GET    | [IMPLEMENTADO] read:own_participations  | Listar participaciones propias              |
| /participation/event/{id}      | GET    | [IMPLEMENTADO] read:participations      | Listar participantes de un evento           |
| /participation/{id}            | DELETE | [IMPLEMENTADO] delete:own_participations| Cancelar participación en un evento         |
| /participation/{id}            | PUT    | [IMPLEMENTADO] update:participations    | Actualizar estado de participación          |

### Router: /api/v1/chat

| Endpoint                   | Método | Scope              | Descripción                              |
|----------------------------|--------|--------------------|------------------------------------------|
| /token                     | GET    | [IMPLEMENTADO] use:chat           | Obtener token para Stream Chat           |
| /rooms                     | POST   | [IMPLEMENTADO] create:chat_rooms  | Crear una nueva sala de chat             |
| /rooms/direct/{id}         | GET    | [IMPLEMENTADO] use:chat           | Obtener/crear chat directo con un usuario|
| /rooms/event/{id}          | GET    | [IMPLEMENTADO] use:chat           | Obtener/crear chat para un evento        |
| /rooms/{id}/members/{id}   | POST   | [IMPLEMENTADO] manage:chat_rooms  | Añadir miembro a sala de chat            |
| /rooms/{id}/members/{id}   | DELETE | [IMPLEMENTADO] manage:chat_rooms  | Eliminar miembro de sala de chat         |

### Router: /api/v1/schedule

| Endpoint                              | Método | Scope                    | Descripción                                |
|---------------------------------------|--------|--------------------------|-------------------------------------------|
| /gym-hours                            | GET    | [IMPLEMENTADO] read:schedules           | Obtener horarios para todos los días       |
| /gym-hours/{day}                      | GET    | [IMPLEMENTADO] read:schedules           | Obtener horarios de un día específico      |
| /gym-hours/{day}                      | PUT    | [IMPLEMENTADO] update:schedules         | Actualizar horarios de un día específico   |
| /gym-hours/initialize                 | POST   | [IMPLEMENTADO] update:schedules         | Inicializar horarios predeterminados       |
| /gym-hours/date/{date}                | GET    | [IMPLEMENTADO] read:schedules           | Obtener horarios para una fecha específica |
| /special-days                         | GET    | [IMPLEMENTADO] read:schedules           | Obtener días especiales                    |
| /special-days/{id}                    | GET    | [IMPLEMENTADO] read:schedules           | Obtener un día especial por ID             |
| /special-days                         | POST   | [IMPLEMENTADO] update:schedules         | Crear un nuevo día especial                |
| /special-days/{id}                    | PUT    | [IMPLEMENTADO] update:schedules         | Actualizar un día especial                 |
| /special-days/{id}                    | DELETE | [IMPLEMENTADO] update:schedules         | Eliminar un día especial                   |
| /classes                              | GET    | [IMPLEMENTADO] read:schedules           | Obtener todas las clases                   |
| /classes/{id}                         | GET    | [IMPLEMENTADO] read:schedules           | Obtener una clase específica con sesiones  |
| /classes                              | POST   | [IMPLEMENTADO] create:schedules         | Crear una nueva clase                      |
| /classes/{id}                         | PUT    | [IMPLEMENTADO] update:schedules         | Actualizar una clase existente             |
| /classes/{id}                         | DELETE | [IMPLEMENTADO] delete:schedules         | Eliminar una clase                         |
| /classes/category/{category}          | GET    | [IMPLEMENTADO] read:schedules           | Obtener clases por categoría               |
| /classes/difficulty/{difficulty}      | GET    | [IMPLEMENTADO] read:schedules           | Obtener clases por nivel de dificultad     |
| /classes/search                       | GET    | [IMPLEMENTADO] read:schedules           | Buscar clases por nombre o descripción     |
| /sessions                             | GET    | [IMPLEMENTADO] read:schedules           | Obtener próximas sesiones                  |
| /sessions/{id}                        | GET    | [IMPLEMENTADO] read:schedules           | Obtener una sesión con detalles            |
| /sessions                             | POST   | [IMPLEMENTADO] create:schedules         | Crear una nueva sesión                     |
| /sessions/recurring                   | POST   | [IMPLEMENTADO] create:schedules         | Crear sesiones recurrentes                 |
| /sessions/{id}                        | PUT    | [IMPLEMENTADO] update:schedules         | Actualizar una sesión                      |
| /sessions/{id}/cancel                 | POST   | [IMPLEMENTADO] update:schedules         | Cancelar una sesión                        |
| /sessions/date-range                  | GET    | [IMPLEMENTADO] read:schedules           | Obtener sesiones en un rango de fechas     |
| /sessions/trainer/{id}                | GET    | [IMPLEMENTADO] read:schedules           | Obtener sesiones de un entrenador          |
| /my-sessions                          | GET    | [IMPLEMENTADO] read:own_schedules       | Obtener sesiones del entrenador actual     |
| /register/{session_id}                | POST   | [IMPLEMENTADO] register:classes         | Registrarse en una clase                   |
| /register/{session_id}/{member_id}    | POST   | [IMPLEMENTADO] manage:class_registrations | Registrar a un miembro en una clase     |
| /cancel-registration/{session_id}     | POST   | [IMPLEMENTADO] register:classes         | Cancelar propio registro en una clase      |
| /cancel-registration/{session_id}/{member_id} | POST | [IMPLEMENTADO] manage:class_registrations | Cancelar registro de un miembro  |
| /mark-attendance/{session_id}/{member_id} | POST | [IMPLEMENTADO] manage:class_registrations | Marcar asistencia de un miembro      |
| /mark-no-show/{session_id}/{member_id} | POST  | [IMPLEMENTADO] manage:class_registrations | Marcar falta de asistencia             |
| /session-participants/{session_id}    | GET    | [IMPLEMENTADO] manage:class_registrations | Obtener participantes de una sesión     |
| /my-classes                           | GET    | [IMPLEMENTADO] read:own_schedules       | Obtener clases registradas del usuario     |
| /member-classes/{member_id}           | GET    | [IMPLEMENTADO] manage:class_registrations | Obtener clases de un miembro específico |

### Router: /api/v1/gyms (Nueva sección)

| Endpoint                    | Método | Scope                     | Descripción                               |
|-----------------------------|--------|--------------------------|--------------------------------------------|
| /                           | POST   | [IMPLEMENTADO] admin:gyms | Crear un nuevo gimnasio                   |
| /                           | GET    | [IMPLEMENTADO] read:gyms  | Listar todos los gimnasios                |
| /{id}                       | GET    | [IMPLEMENTADO] read:gyms  | Obtener detalles de un gimnasio           |
| /{id}                       | PUT    | [IMPLEMENTADO] admin:gyms | Actualizar datos de un gimnasio           |
| /{id}                       | DELETE | [IMPLEMENTADO] admin:gyms | Eliminar un gimnasio                      |
| /subdomain/{subdomain}      | GET    | [IMPLEMENTADO] admin:gyms | Obtener gimnasio por subdominio           |
| /{id}/users                 | GET    | [IMPLEMENTADO] read:gym_users | Listar usuarios de un gimnasio        |

## Inconsistencias encontradas que deben corregirse en el código:

1. En el módulo de eventos, algunos permisos usan `read_events` en lugar de `read:events`. Debe unificarse a `read:events`.

2. Falta implementar el permiso `update:events` en el endpoint PUT de eventos (actualmente usa create:events).

## Notas para la implementación en Auth0

1. Crear los scopes en Auth0 según la lista de [IMPLEMENTADO]
2. Asignar los scopes a cada rol (MEMBER, TRAINER, ADMIN) según la sección "Estructura de Permisos por Rol"
3. Resolver las inconsistencias mencionadas en el código antes de configurar Auth0
4. Asegurarse de que las API Permissions en Auth0 incluyan todos estos scopes
5. Configurar la API en Auth0 para que incluya estos scopes en los tokens 