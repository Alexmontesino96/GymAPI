# Actualizaciones necesarias en Auth0 para sincronizar permisos

## Correcciones realizadas en el código
1. Corregido el permiso en endpoint PUT de eventos: cambiado de "create:events" a "update:events"
2. Corregido el permiso "read_events" a "read:events" en todos los endpoints

## Permisos que deben agregarse en Auth0
Los siguientes permisos se están utilizando en el código pero no están registrados en Auth0:

### Usuarios
1. read:users - Leer información de usuarios
2. update:users - Actualizar usuarios 
3. delete:users - Eliminar usuarios

### Gimnasios
4. admin:gyms - Administrar gimnasios
5. read:gyms - Leer información de gimnasios
6. read:gym_users - Leer usuarios de gimnasios

### Horarios y programación
7. read:schedules - Leer horarios y programación
8. read:own_schedules - Leer horarios propios
9. create:schedules - Crear horarios y clases
10. update:schedules - Actualizar horarios y clases
11. delete:schedules - Eliminar horarios y clases
12. register:classes - Registrarse en clases
13. manage:class_registrations - Gestionar registros de clases

## Asignación recomendada por rol

### Miembros (Members)
- read:profile
- read:members
- read:own_events
- read:events
- read:own_participations
- delete:own_participations
- create:participations
- read:own_relationships
- use:chat
- create:chat_rooms
- read:schedules
- read:own_schedules
- register:classes
- read:gyms

### Entrenadores (Trainers)
Todos los anteriores, más:
- read:users
- create:events
- update:events
- read:participations
- update:participations
- read:relationships
- create:relationships
- update:relationships
- manage:chat_rooms
- create:schedules
- update:schedules
- manage:class_registrations

### Administradores (Admins)
Todos los anteriores, más:
- admin:users
- update:users
- delete:users
- delete:events
- admin:events
- delete:relationships
- admin:relationships
- delete:schedules
- admin:gyms
- read:gym_users

## Próximos pasos
1. Agregar estos permisos en Auth0 (API Permissions)
2. Asignar los permisos a los roles correspondientes
3. Validar que los tokens JWT contengan los permisos correctos
4. Probar los endpoints para asegurar que los permisos funcionan correctamente 